// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/* Autogenerated file. Do not edit manually. */

import { Class } from "./../Types.sol";

interface IPlayerSystem {
  function createPlayer(
    address owner,
    bytes32 world,
    Class charclass,
    string memory name,
    string memory player_description,
    string memory picture_url,
    uint256 healthpoints
  ) external returns (bool);

  function viewPlayerName(address owner, bytes32 world) external view returns (string memory);

  function viewPlayerClass(address owner, bytes32 world) external view returns (Class);

  function viewPlayerDescription(address owner, bytes32 world) external view returns (string memory);

  function viewPlayerPictureUrl(address owner, bytes32 world) external view returns (string memory);

  function viewPlayerHealth(address owner, bytes32 world) external view returns (uint256, uint256);

  function viewPlayerXp(address owner, bytes32 world) external view returns (uint256);

  function viewPlayerScoreSheet(
    address owner,
    bytes32 world
  ) external view returns (uint256, uint256, uint256, uint256, uint256, uint256);

  function updatePlayerName(address owner, bytes32 world, string memory name) external returns (bool);

  function updatePlayerClass(address owner, bytes32 world, Class charclass) external returns (bool);

  function updatePlayerDescription(
    address owner,
    bytes32 world,
    string memory player_description
  ) external returns (bool);

  function updatePlayerPictureUrl(address owner, bytes32 world, string memory picture_url) external returns (bool);

  function updatePlayerCurrentHealth(address owner, bytes32 world, uint256 current) external returns (bool);

  function updatePlayerMaxHealth(address owner, bytes32 world, uint256 max) external returns (bool);

  function updatePlayerCurrentXp(address owner, bytes32 world, uint256 current) external returns (bool);

  function updatePlayerStrength(address owner, bytes32 world, uint256 strength) external returns (bool);

  function updatePlayerDexterity(address owner, bytes32 world, uint256 dexterity) external returns (bool);

  function updatePlayerConstitution(address owner, bytes32 world, uint256 constitution) external returns (bool);

  function updatePlayerIntelligence(address owner, bytes32 world, uint256 intelligence) external returns (bool);

  function updatePlayerWisdom(address owner, bytes32 world, uint256 wisdom) external returns (bool);

  function updatePlayerCharisma(address owner, bytes32 world, uint256 charisma) external returns (bool);

  function updatePlayerScoreSheet(
    address owner,
    bytes32 world,
    uint256 strength,
    uint256 dexterity,
    uint256 constitution,
    uint256 intelligence,
    uint256 wisdom,
    uint256 charisma
  ) external returns (bool);

  function removePlayer(address owner, bytes32 world) external returns (bool);
}
